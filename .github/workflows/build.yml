name: API
on: [push, pull_request]
jobs:
  october:
    name: pipeline (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 'secret'
          MYSQL_DATABASE: 'crm'
          MYSQL_USER: 'crm_user'
          MYSQL_PASSWORD: '.secret@'
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.0.9']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo, mysql
          coverage: none
      - name: Start mysql service
        run: sudo /etc/init.d/mysql start
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install -q --no-progress --prefer-dist --optimize-autoloader
      - name: Setup Env Variables
        run: |
            cp .env.example .env
            sed -i -e "s/APP_URL=http:\/\/localhost/APP_URL=http:\/\/127.0.0.1:8000/g" .env
            sed -i -e "s/3306/${{ job.services.mysql.ports['3306'] }}/g" .env
            sed -i -e "s/DB_HOST=mysql/DB_HOST=127.0.0.1/g" .env
            sed -i -e "s/local/testing/g" .env
      - name: Run OctoberCMS Server
        run: php artisan serve &
      - name: curl to localhost
        run: curl localhost:8000 &
      - name: Run Tests
        run: vendor/bin/phpunit
